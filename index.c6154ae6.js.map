{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAI,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAe,SAAS,gBAAgB,CAAC,iB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAMzC,EAAM,AAJV,CAAA,EAAW,EAAS,GAAG,CAAC,SAAC,CAAzB,EACE,MAAO,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,GACxC,EAAA,EAEmB,MAAM,CAAC,SAAC,CAAA,CAAQ,CAAnC,EAA+C,OAAA,EAAU,CAAQ,EAAA,GAC7D,EAAU,KAAK,IAAI,CAAC,EAAM,EAAS,MAAM,EAE7C,EAAM,EAAI,QAAQ,GAClB,EAAU,EAAQ,QAAQ,GAE1B,IAAM,EAAW,SAAC,CAAlB,EAIE,IAAK,IAHD,EAAS,GACP,EAAiB,EAAO,KAAK,CAAC,IAAI,OAAO,GAEtC,EAAI,EAAO,MAAM,CAAG,EAAG,GAAK,EAAG,IAClC,EAAI,GAAM,GAAK,IAAM,EAAe,MAAM,CAAG,EAC/C,GAAU,IAAM,CAAc,CAAC,EAAE,CAEjC,GAAU,CAAc,CAAC,EAAE,CAI/B,OAAO,CACT,EAEM,EAAU,EAAS,GACnB,EAAU,EAAS,GACnB,EAAsB,SAAS,aAAa,CAAC,qBAC7C,EAAwB,SAAS,aAAa,CAAC,uBAErD,EAAoB,kBAAkB,CAAC,YAAa,GACpD,EAAsB,kBAAkB,CAAC,YAAa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar elements = _to_consumable_array(document.querySelectorAll('.population'));\nelements = elements.map(function(e) {\n    return +e.textContent.split(',').join('');\n});\nvar sum = elements.reduce(function(totall, element) {\n    return element + totall;\n}, 0);\nvar average = Math.ceil(sum / elements.length);\nsum = sum.toString();\naverage = average.toString();\nvar formator = function(string) {\n    var result = '';\n    var reversedString = string.split('').reverse();\n    for(var i = string.length - 1; i >= 0; i--)if (i % 3 === 2 && i !== reversedString.length - 1) result += ' ' + reversedString[i];\n    else result += reversedString[i];\n    return result;\n};\nvar result1 = formator(sum);\nvar result2 = formator(average);\nvar totalPopulationSpan = document.querySelector('.total-population');\nvar averagePopulationSpan = document.querySelector('.average-population');\ntotalPopulationSpan.insertAdjacentText('beforeend', result1);\naveragePopulationSpan.insertAdjacentText('beforeend', result2);\n\n//# sourceMappingURL=index.c6154ae6.js.map\n","'use strict';\n\nlet elements = [...document.querySelectorAll('.population')];\n\nelements = elements.map((e) => {\n  return +e.textContent.split(',').join('');\n});\n\nlet sum = elements.reduce((totall, element) => element + totall, 0);\nlet average = Math.ceil(sum / elements.length);\n\nsum = sum.toString();\naverage = average.toString();\n\nconst formator = (string) => {\n  let result = '';\n  const reversedString = string.split('').reverse();\n\n  for (let i = string.length - 1; i >= 0; i--) {\n    if (i % 3 === 2 && i !== reversedString.length - 1) {\n      result += ' ' + reversedString[i];\n    } else {\n      result += reversedString[i];\n    }\n  }\n\n  return result;\n};\n\nconst result1 = formator(sum);\nconst result2 = formator(average);\nconst totalPopulationSpan = document.querySelector('.total-population');\nconst averagePopulationSpan = document.querySelector('.average-population');\n\ntotalPopulationSpan.insertAdjacentText('beforeend', result1);\naveragePopulationSpan.insertAdjacentText('beforeend', result2);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","elements","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sum","map","e","textContent","split","join","reduce","totall","element","average","Math","ceil","formator","string","result","reversedString","reverse","result1","result2","totalPopulationSpan","querySelector","averagePopulationSpan","insertAdjacentText"],"version":3,"file":"index.c6154ae6.js.map"}